@using WebApplication1.ViewModels;
@model ChangePasswordViewModel;

@{
    ViewData["Title"] = "Change Password";
    Layout = "~/Views/Shared/_AccountLayout.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="~/css/change-password.css" />
}

<div class="auth-container">
    <div class="auth-card">
        <div class="auth-header">
            <h2>üîÑ Change Password</h2>
            <p class="text-muted">Create a new secure password</p>
        </div>

        <div class="verification-content">
            <div class="alert alert-info" style="border: none; background: #d1ecf1; color: #0c5460; margin-bottom: 30px;">
                <strong>üîê Password Reset</strong><br>
                Please create a new secure password for your account. Make sure it's strong and unique.
            </div>

            <form asp-action="ChangePassword" method="post" class="auth-form">
                @Html.AntiForgeryToken()
                <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                <div class="form-group">
                    <label asp-for="Email" class="form-label">Email Address</label>
                    <div class="input-group">
                        <span class="input-group-text">üìß</span>
                        <input asp-for="Email" class="form-control" readonly style="background-color: #f8f9fa;">
                    </div>
                </div>

                <input asp-for="Token" type="hidden" />

                <div class="form-group">
                    <label asp-for="NewPassword" class="form-label">New Password</label>
                    <div class="input-group">
                        <span class="input-group-text">üîí</span>
                        <input asp-for="NewPassword" class="form-control"
                               type="password" placeholder="Enter new password" minlength="8" maxlength="40" required>
                    </div>
                    <span asp-validation-for="NewPassword" class="text-danger small"></span>
                    <div class="form-text password-hint">Must be at least 8 characters long</div>
                </div>

                <div class="form-group">
                    <label asp-for="ConfirmNewPassword" class="form-label">Confirm New Password</label>
                    <div class="input-group">
                        <span class="input-group-text">‚úÖ</span>
                        <input asp-for="ConfirmNewPassword" class="form-control"
                               type="password" placeholder="Confirm new password" minlength="8" maxlength="40" required>
                    </div>
                    <span asp-validation-for="ConfirmNewPassword" class="text-danger small"></span>
                </div>

                <div class="alert alert-warning" style="border: none; background: #fff3cd; color: #856404; margin: 20px 0;">
                    <strong>‚ö†Ô∏è Password Requirements:</strong><br>
                    ‚Ä¢ At least 8 characters long<br>
                    ‚Ä¢ Must contain uppercase and lowercase letters<br>
                    ‚Ä¢ Must include at least one number<br>
                    ‚Ä¢ Must include at least one special character
                </div>

                <button type="submit" class="btn btn-success w-100 py-3 mb-3" style="font-size: 1.1rem; font-weight: 600;">
                    <span class="spinner-border spinner-border-sm d-none" role="status"></span>
                    üîÑ Update Password
                </button>

                <div class="text-center">
                    <a asp-controller="Account" asp-action="Login" class="btn btn-outline-secondary">
                        Back to Login
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {


            const form = document.querySelector('form');
            if (form) {
                form.addEventListener('submit', function() {
                    const submitBtn = this.querySelector('button[type="submit"]');
                    const spinner = submitBtn ? submitBtn.querySelector('.spinner-border') : null;
                    if (submitBtn && spinner) {
                        submitBtn.disabled = true;
                        spinner.classList.remove('d-none');
                    }
                });
            }

            const passwordInput = document.querySelector('input[name="NewPassword"]');
            if (passwordInput) {
                const hintElement = document.querySelector('.password-hint');
                
                passwordInput.addEventListener('input', function() {
                    const password = this.value;
                    if (hintElement) {
                        if (password.length === 0) {
                            hintElement.className = 'form-text password-hint text-muted';
                            hintElement.textContent = 'Enter at least 8 characters';
                        } else if (password.length < 8) {
                            hintElement.className = 'form-text password-hint text-warning';
                            hintElement.textContent = `${password.length}/8 characters`;
                        } else {
                            hintElement.className = 'form-text password-hint text-success';
                            hintElement.textContent = 'Good password length ‚úì';
                        }
                    }
                });
                
                if (hintElement && passwordInput.value.length === 0) {
                    hintElement.className = 'form-text password-hint text-muted';
                    hintElement.textContent = 'Enter at least 8 characters';
                }
            }
        });

        @if (TempData["PasswordChanged"] != null)
        {
                <text>
                Swal.fire({
                    title: 'Password Updated Successfully!',
                    html: `
                        <div class="text-center">
                            <div class="alert alert-success" style="border: none; background: #d4edda; color: #155724; margin-bottom: 20px;">
                                <strong>üéâ Congratulations!</strong><br>
                                Your password has been successfully updated. Your account is now more secure.
                            </div>
                            <div class="alert alert-info" style="border: none; background: #d1ecf1; color: #0c5460; margin-bottom: 20px;">
                                <strong>What's next?</strong><br>
                                You can now log in with your new password and continue using our platform.
                            </div>

                        </div>
                    `,
                    icon: 'success',
                    confirmButtonText: 'Log in to Your Account',
                    confirmButtonColor: '#28a745',
                    allowOutsideClick: false,
                    allowEscapeKey: false,
                    customClass: {
                        popup: 'swal-wide'
                    }
                }).then(function() {
                    window.location.href = '@Url.Action("Login", "Account")';
                });
                </text>
        }

        @if (TempData["PasswordError"] != null)
        {
                var passwordError = TempData["PasswordError"]?.ToString() ?? "";
                <text>
                var rawErrors = '@Html.Raw(System.Net.WebUtility.HtmlEncode(passwordError))';
                if (rawErrors) {
                    var errors = rawErrors.split("||").filter(function(e) { return e.trim() !== ""; });
                    if (errors.length > 0) {
                        Swal.fire({
                            title: 'Password Change Failed',
                            icon: 'error',
                            html: '<div style="text-align:left;"><ul class="mb-0">' + errors.map(function(e) { return '<li>' + e + '</li>'; }).join('') + '</ul></div>',
                            confirmButtonText: 'Try Again',
                            width: 500
                        });
                    }
                }
                </text>
        }
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}